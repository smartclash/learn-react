{"version":3,"sources":["Components/AddTodo.js","Components/TodoItem.js","index.js"],"names":["AddTodo","onSubmit","this","props","handler","id","name","type","value","React","Component","TodoItem","Date","todo","createdAt","toUTCString","title","displayCreatedAt","description","completed","onClick","checker","displayTodo","deleter","App","state","todos","displayHelp","bind","handleNewTodo","handleDeleteTodo","handleCheckboxTodo","length","map","key","e","preventDefault","data","FormData","target","document","forms","namedItem","reset","setState","oldState","get","freshTodos","filter","ReactDOM","render","getElementById"],"mappings":"6OAaeA,E,uKATP,OACI,0BAAMC,SAAUC,KAAKC,MAAMC,QAASC,GAAG,YACnC,2BAAOC,KAAK,cAAcC,KAAK,SADnC,IAC6C,6BACzC,2BAAOA,KAAK,SAASC,MAAM,gB,GALrBC,IAAMC,WC2BbC,E,iLAzBP,MAAO,cAAgB,IAAIC,KAAKV,KAAKC,MAAMU,KAAKC,WAAWC,gB,oCAI3D,IAAMF,EAAO,uBAAGG,MAAOd,KAAKe,oBAAqBf,KAAKC,MAAMU,KAAKK,aAEjE,OAAIhB,KAAKC,MAAMU,KAAKM,UACT,6BAAMN,GAGVA,I,+BAGD,IAAD,OACL,OACI,6BACI,2BAAON,KAAK,WAAWa,QAAS,kBAAM,EAAKjB,MAAMkB,QAAQ,EAAKlB,MAAMU,KAAKR,OACxEH,KAAKoB,cACN,4BAAQF,QAAS,kBAAM,EAAKjB,MAAMoB,QAAQ,EAAKpB,MAAMU,KAAKR,MAA1D,UACA,kC,GArBOI,IAAMC,WCIvBc,E,kDACF,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAAEC,MAAO,IAEtB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAPhB,E,0DAWV,IAAI1B,KAAKuB,MAAMC,MAAMM,OAIrB,OAAO,2E,oCAGI,IAAD,OACV,OAAO9B,KAAKuB,MAAMC,MACbO,KAAI,SAAApB,GAAI,OAAI,kBAAC,EAAD,CACTqB,IAAKrB,EAAKR,GACVQ,KAAMA,EACNU,QAAS,EAAKO,iBACdT,QAAS,EAAKU,0B,oCAOZI,GACVA,EAAEC,iBACF,IAAMC,EAAO,IAAIC,SAASH,EAAEI,QAC5BC,SAASC,MAAMC,UAAU,YAAYC,QAErCzC,KAAK0C,UAAS,SAAAC,GACV,IAAMxC,EAAKwC,EAASnB,MAAMM,OAAS,EAEnC,MAAO,CACHN,MAAM,GAAD,mBACEmB,EAASnB,OADX,CAED,CACIrB,KACAS,WAAY,IAAIF,KAChBM,YAAamB,EAAKS,IAAI,eACtB3B,WAAW,W,uCAOdd,GACb,IAAM0C,EAAa7C,KAAKuB,MAAMC,MAAMsB,QAAO,SAAAnC,GAAI,OAAIA,EAAKR,KAAOA,KAC/DH,KAAK0C,SAAS,CAAElB,MAAOqB,M,yCAGR1C,GACf,IAAM0C,EAAa7C,KAAKuB,MAAMC,MAAMO,KAAI,SAAApB,GACpC,OAAIA,EAAKR,KAAOA,EACL,eAAIQ,EAAX,CAAiBM,WAAYN,EAAKM,YAG/BN,KAGXX,KAAK0C,SAAS,CAAElB,MAAOqB,M,+BAIvB,OACI,6BACI,wCACC7C,KAAKyB,cACLzB,KAAKoB,cACN,kBAAC,EAAD,CAASlB,QAASF,KAAK2B,qB,GA7ErBpB,IAAMC,WAmFxBuC,IAASC,OAAO,kBAAC,EAAD,MAASV,SAASW,eAAe,W","file":"static/js/main.ed813d76.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddTodo extends React.Component {\n    render() {\n        return (\n            <form onSubmit={this.props.handler} id=\"add-todo\">\n                <input name=\"description\" type=\"text\" /> <br />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nexport default AddTodo;\n","import React from 'react';\n\nclass TodoItem extends React.Component {\n    displayCreatedAt() {\n        return \"Created at \" + new Date(this.props.todo.createdAt).toUTCString();\n    }\n\n    displayTodo() {\n        const todo = <p title={this.displayCreatedAt()}>{this.props.todo.description}</p>;\n\n        if (this.props.todo.completed) {\n            return <del>{todo}</del>;\n        }\n\n        return todo;\n    }\n\n    render() {\n        return (\n            <div>\n                <input type=\"checkbox\" onClick={() => this.props.checker(this.props.todo.id)} />\n                {this.displayTodo()}\n                <button onClick={() => this.props.deleter(this.props.todo.id)}>Delete</button>\n                <hr />\n            </div>\n        );\n    }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AddTodo from './Components/AddTodo';\nimport TodoItem from './Components/TodoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = { todos: [] };\n\n        this.displayHelp = this.displayHelp.bind(this);\n        this.handleNewTodo = this.handleNewTodo.bind(this);\n        this.handleDeleteTodo = this.handleDeleteTodo.bind(this);\n        this.handleCheckboxTodo = this.handleCheckboxTodo.bind(this);\n    }\n\n    displayHelp() {\n        if (this.state.todos.length) {\n            return ;\n        }\n\n        return <h2>You can add todos by using the form below</h2>;\n    }\n\n    displayTodo() {\n        return this.state.todos\n            .map(todo => <TodoItem\n                key={todo.id}\n                todo={todo}\n                deleter={this.handleDeleteTodo}\n                checker={this.handleCheckboxTodo}\n            />);\n    }\n\n    /**\n     * @param {React.FormEvent<HTMLFormElement>} e \n     */\n    handleNewTodo(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        document.forms.namedItem('add-todo').reset();\n\n        this.setState(oldState => {\n            const id = oldState.todos.length + 1;\n\n            return {\n                todos: [\n                    ...oldState.todos,\n                    {\n                        id,\n                        createdAt: +new Date(),\n                        description: data.get('description'),\n                        completed: false\n                    }\n                ]\n            }\n        });\n    }\n\n    handleDeleteTodo(id) {\n        const freshTodos = this.state.todos.filter(todo => todo.id !== id);\n        this.setState({ todos: freshTodos });\n    }\n\n    handleCheckboxTodo(id) {\n        const freshTodos = this.state.todos.map(todo => {\n            if (todo.id === id) {\n                return {...todo, completed: !todo.completed }\n            }\n\n            return todo;\n        });\n\n        this.setState({ todos: freshTodos });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Todo App</h1>\n                {this.displayHelp()}\n                {this.displayTodo()}\n                <AddTodo handler={this.handleNewTodo} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}