{"version":3,"sources":["Components/AddTodo.js","Components/TodoItem.js","index.js"],"names":["AddTodo","onSubmit","this","props","handler","id","name","type","value","React","Component","TodoItem","displayCreatedAt","bind","Date","todo","createdAt","toUTCString","title","description","App","state","todos","displayHelp","handleNewTodo","length","map","key","e","preventDefault","data","FormData","target","document","forms","namedItem","reset","setState","oldState","get","completed","displayTodo","ReactDOM","render","getElementById"],"mappings":"kMAaeA,E,uKATP,OACI,0BAAMC,SAAUC,KAAKC,MAAMC,QAASC,GAAG,YACnC,2BAAOC,KAAK,cAAcC,KAAK,SADnC,IAC6C,6BACzC,2BAAOA,KAAK,SAASC,MAAM,gB,GALrBC,IAAMC,WCqBbC,E,kDApBX,aAAe,IAAD,8BACV,gBAEKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBAHd,E,+DAOV,MAAO,cAAgB,IAAIC,KAAKZ,KAAKC,MAAMY,KAAKC,WAAWC,gB,+BAI3D,OACI,6BACI,uBAAGC,MAAOhB,KAAKU,oBAAqBV,KAAKC,MAAMY,KAAKI,aACpD,kC,GAfOV,IAAMC,WCIvBU,E,kDACF,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAAEC,MAAO,IAEtB,EAAKC,YAAc,EAAKA,YAAYV,KAAjB,gBACnB,EAAKW,cAAgB,EAAKA,cAAcX,KAAnB,gBALX,E,0DASV,IAAIX,KAAKmB,MAAMC,MAAMG,OAIrB,OAAO,2E,oCAIP,OAAOvB,KAAKmB,MAAMC,MACbI,KAAI,SAAAX,GAAI,OAAI,kBAAC,EAAD,CACTY,IAAKZ,EAAKV,GACVU,KAAMA,S,oCAOJa,GACVA,EAAEC,iBACF,IAAMC,EAAO,IAAIC,SAASH,EAAEI,QAC5BC,SAASC,MAAMC,UAAU,YAAYC,QAErClC,KAAKmC,UAAS,SAAAC,GACV,IAAMjC,EAAKiC,EAAShB,MAAMG,OAAS,EAEnC,MAAO,CACHH,MAAM,GAAD,mBACEgB,EAAShB,OADX,CAED,CACIjB,KACAW,WAAY,IAAIF,KAChBK,YAAaW,EAAKS,IAAI,eACtBC,WAAW,W,+BAQ3B,OACI,6BACI,wCACCtC,KAAKqB,cACLrB,KAAKuC,cACN,kBAAC,EAAD,CAASrC,QAASF,KAAKsB,qB,GAxDrBf,IAAMC,WA8DxBgC,IAASC,OAAO,kBAAC,EAAD,MAASV,SAASW,eAAe,U","file":"static/js/main.417d4279.chunk.js","sourcesContent":["import React from 'react';\n\nclass AddTodo extends React.Component {\n    render() {\n        return (\n            <form onSubmit={this.props.handler} id=\"add-todo\">\n                <input name=\"description\" type=\"text\" /> <br />\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n\nexport default AddTodo;\n","import React from 'react';\n\nclass TodoItem extends React.Component {\n    constructor() {\n        super()\n\n        this.displayCreatedAt = this.displayCreatedAt.bind(this);\n    }\n\n    displayCreatedAt() {\n        return \"Created at \" + new Date(this.props.todo.createdAt).toUTCString()\n    }\n\n    render() {\n        return (\n            <div>\n                <p title={this.displayCreatedAt()}>{this.props.todo.description}</p>\n                <hr />\n            </div>\n        );\n    }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport AddTodo from './Components/AddTodo';\nimport TodoItem from './Components/TodoItem';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = { todos: [] };\n\n        this.displayHelp = this.displayHelp.bind(this);\n        this.handleNewTodo = this.handleNewTodo.bind(this);\n    }\n\n    displayHelp() {\n        if (this.state.todos.length) {\n            return ;\n        }\n\n        return <h2>You can add todos by using the form below</h2>;\n    }\n\n    displayTodo() {\n        return this.state.todos\n            .map(todo => <TodoItem\n                key={todo.id}\n                todo={todo}\n            />);\n    }\n\n    /**\n     * @param {React.FormEvent<HTMLFormElement>} e \n     */\n    handleNewTodo(e) {\n        e.preventDefault();\n        const data = new FormData(e.target);\n        document.forms.namedItem('add-todo').reset();\n\n        this.setState(oldState => {\n            const id = oldState.todos.length + 1;\n\n            return {\n                todos: [\n                    ...oldState.todos,\n                    {\n                        id,\n                        createdAt: +new Date(),\n                        description: data.get('description'),\n                        completed: false\n                    }\n                ]\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Todo App</h1>\n                {this.displayHelp()}\n                {this.displayTodo()}\n                <AddTodo handler={this.handleNewTodo} />\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}